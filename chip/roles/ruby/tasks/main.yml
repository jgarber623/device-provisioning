- name: Install packages
  import_role:
    name: common

- name: Copy configuration files
  copy:
    src: files/{{ item }}
    dest: "{{ ansible_user_dir }}/{{ item }}"
  with_items: "{{ files.copy }}"

- name: Install/update rbenv
  git:
    repo: "{{ rbenv.repo }}"
    dest: "{{ rbenv.path }}"

- name: Create rbenv plugins folder
  file:
    path: "{{ rbenv.path }}/plugins"
    state: directory
  register: rbenv_plugins_result

- name: Install/update rbenv plugins
  git:
    repo: "{{ item.repo }}"
    dest: "{{ rbenv_plugins_result.path }}/{{ item.name }}"
  with_items: "{{ rbenv.plugins }}"

- name: Install Ruby {{ ruby.version }}
  shell: "{{ ansible_env.SHELL }} -lc '{{ rbenv.path }}/bin/rbenv install --skip-existing {{ ruby.version }}'"
  register: install_ruby_result
  changed_when: install_ruby_result.stdout != ''

- name: Set global Ruby version
  shell: "{{ ansible_env.SHELL }} -lc '{{ rbenv.path }}/bin/rbenv global {{ ruby.version }}'"
  changed_when: false

- name: Update RubyGems
  shell: "{{ ansible_env.SHELL }} -lc '{{ rbenv.path }}/shims/gem update --system'"
  register: update_rubygems_result
  changed_when: '"Latest version already installed. Done." not in update_rubygems_result.stdout'
